name: Pulumi
on:
  push:
    branches:
      - main
jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3.5.0
        with:
          node-version-file: ./infrastructure/package.json
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: cd react-app && npm install
      - run: cd react-app && npm run build
      - run: cd infrastructure && npm install
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: prod # When using an individual account, only use stack-name.
          work-dir: infrastructure
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out code
        uses: actions/checkout@v3
      - name: Installing Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Installing dependencies
        run: cd react-app && npm install
      - name: Building project
        run: cd react-app && npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          inline-session-policy: >-
            {
             "Version": "2012-10-17",
             "Statement": [
              {
                 Effect: "Allow",
                 Principal: {
                   AWS: "arn:aws:s3:::dimitrios-react-app.net",
                 }, // Only allow Cloudfront read access.
                 Action: [
                            "s3:GetObject", 
                            "s3:ListBucket",
                            "s3:PutObject",
                            "s3:PutObjectAcl",
                            "s3:ReplicateObject",                             
                            "s3:DeleteObject"
                 ],
                 Resource: ["arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity EJ0Y164NXBLQM/*"],
              },
             ]
            }
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 sync ./react-app/build s3://dimitrios-react-app.netprod